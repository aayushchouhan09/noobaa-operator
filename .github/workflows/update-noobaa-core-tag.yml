name: Update Noobaa-Core container image tag

on:
  workflow_dispatch:
    inputs:
      container_image_tag:
        description: 'The container image tag for noobaa-core'
        required: true
      target_branch:
        description: 'The target branch to update the tag in'
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN_WRITE }} # We need a token with write permissions to create/merge the PR

    steps:
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Replace ContainerImageTag
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: 'ContainerImageTag = ".*"'
          replace: 'ContainerImageTag = "${{ github.event.inputs.container_image_tag }}"'
          include: 'pkg/options/options.go'
          regex: true

      - name: Commit & Push changes
        run: |
          git config --global user.email "github-action@noobaa.io"
          git config --global user.name "NooBaa GitHub Action"
          git checkout -b update-core-tag-${{ github.event.inputs.container_image_tag }}
          git diff
          git add pkg/options/options.go
          git commit -m "chore: update noobaa-core image tag to ${{ github.event.inputs.container_image_tag }}"
          git push origin update-core-tag-${{ github.event.inputs.container_image_tag }}

      - name: Create Pull Request
        id: create_pr
        run: |
          PR_URL=$(gh pr create \
            --title "Update ContainerImageTag to ${{ github.event.inputs.container_image_tag }}" \
            --body "Automated update of ContainerImageTag to ${{ github.event.inputs.container_image_tag }} in options.go" \
            --head update-core-tag-${{ github.event.inputs.container_image_tag }} \
            --base ${{ github.event.inputs.target_branch }})
          echo "PR created: $PR_URL"
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"


      - name: Wait for PR checks and merge
        run: |
          echo "Waiting for checks to pass on: ${{ steps.create_pr.outputs.pr_url }}"
          for i in {1..10}; do
            echo "Attempt $i: Checking if PR checks are available..."

            # Try to get check status, don't fail if command fails
            set +e
            check_output=$(gh pr checks "${{ steps.create_pr.outputs.pr_url }}" 2>&1)
            exit_code=$?
            set -e

            echo "Command exit code: $exit_code"
            echo "Command output: $check_output"

            if echo "$check_output" | grep -q "no checks reported"; then
              echo "No checks yet. Retrying in 10 seconds..."
              sleep 10
            elif [ $exit_code -eq 0 ] || echo "$check_output" | grep -q "pending\|success\|failure"; then
              echo "Checks found. Watching..."
              gh pr checks "${{ steps.create_pr.outputs.pr_url }}" --watch
              break
            else
              echo "Error getting check status. Retrying in 10 seconds..."
              echo "Error details: $check_output"
              sleep 10
            fi
          done

          if [ $i -eq 10 ]; then
            echo "Failed to detect PR checks after retries"
            exit 1
          fi

          echo "Rebasing and merging PR..."
          gh pr merge "${{ steps.create_pr.outputs.pr_url }}" --rebase --admin --delete-branch
